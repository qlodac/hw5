一
1.
image_in=imread('test1.pgm');
step=2;
D=100;
a=0;
[m, n] = size(image_in);
p = 2 * m;
q = 2 * n;

fp = zeros(p, q);

for i = 1 : m
    for j = 1 : n
        fp(i, j) = double(image_in(i, j)) * (-1)^(i+j);
    end
end

F = fft2(fp);


Better = zeros(p, q);
a = D^(2 * step);
for u = 1 : p
    for v = 1 : q
        temp = (u-(m+1.0))^2 + (v-(n+1.0))^2;
        Better(u, v) = 1 / (1 + (temp^step) / a);
    end
end


I = F .* Better;


gp = ifft2(I);


image_out = zeros(m, n, 'uint8');
gp = real(gp);
g = zeros(m, n);
for i = 1 : m
    for j = 1 : n
        g(i, j) = gp(i, j) * (-1)^(i+j);
        
    end
end
mmax = max(g(:));
mmin = min(g(:));
range = mmax-mmin;
for i = 1 : m
    for j = 1 : n
        image_out(i,j) = uint8(255 * (g(i, j)-mmin) / range);
    end
end
i1=0;
j1=0;
for x=1:m
	for y=1:n
	    i1=i1+(abs(I(x,y)))^2;
	    j1=j1+(abs(F(x,y)))^2;
	end
end
    a1=i1/j1;
a1
imshow(image_out), title('D0 = 100, n = 2');








2.
image_in=imread('test1.pgm');
D=200;
a=0;
[m, n] = size(image_in);
p = 2 * m;
q = 2 * n;

fp = zeros(p, q);

for i = 1 : m
    for j = 1 : n
        fp(i, j) = double(image_in(i, j)) * (-1)^(i+j);
    end
end

F = fft2(fp);


gao = zeros(p, q);
a = D^(2);
for u = 1 : p
    for v = 1 : q
        temp = ((u-(m+1.0))^2 + (v-(n+1.0))^2)/(2*a);
        gao(u, v) = 1/exp(temp);
    end
end


I = F .* gao;


gp = ifft2(I);


image_out = zeros(m, n, 'uint8');
gp = real(gp);
g = zeros(m, n);
for i = 1 : m
    for j = 1 : n
        g(i, j) = gp(i, j) * (-1)^(i+j);
        
    end
end
mmax = max(g(:));
mmin = min(g(:));
range = mmax-mmin;
for i = 1 : m
    for j = 1 : n
        image_out(i,j) = uint8(255 * (g(i, j)-mmin) / range);
    end
end
i1=0;
j1=0;
for x=1:m
	for y=1:n
	    i1=i1+(abs(I(x,y)))^2;
	    j1=j1+(abs(F(x,y)))^2;
	end
end
    a1=i1/j1;
a1
imshow(image_out), title('D0 = 200');









二
1.
image_in=imread('test2.tif');
step=2;
D=200;
a=0;
[m, n] = size(image_in);
p = 2 * m;
q = 2 * n;

fp = zeros(p, q);

for i = 1 : m
    for j = 1 : n
        fp(i, j) = double(image_in(i, j)) * (-1)^(i+j);
    end
end

F = fft2(fp);


Better = zeros(p, q);
a = D^(2 * step);
for u = 1 : p
    for v = 1 : q
        temp = (u-(m+1.0))^2 + (v-(n+1.0))^2;
        Better(u, v) = 1 / (1 + a / (temp^step));
    end
end


I = F .* Better;


gp = ifft2(I);


image_out = zeros(m, n, 'uint8');
gp = real(gp);
g = zeros(m, n);
for i = 1 : m
    for j = 1 : n
        g(i, j) = gp(i, j) * (-1)^(i+j);
        
    end
end
mmax = max(g(:));
mmin = min(g(:));
range = mmax-mmin;
for i = 1 : m
    for j = 1 : n
        image_out(i,j) = uint8(255 * (g(i, j)-mmin) / range);
    end
end
i1=0;
j1=0;
for x=1:m
	for y=1:n
	    i1=i1+(abs(I(x,y)))^2;
	    j1=j1+(abs(F(x,y)))^2;
	end
end
    a1=i1/j1;
a1
imshow(image_out)






2.
image_in=imread('test2.tif');
D=200;
a=0;
[m, n] = size(image_in);
p = 2 * m;
q = 2 * n;

fp = zeros(p, q);

for i = 1 : m
    for j = 1 : n
        fp(i, j) = double(image_in(i, j)) * (-1)^(i+j);
    end
end

F = fft2(fp);


gao = zeros(p, q);
a = D^(2);
for u = 1 : p
    for v = 1 : q
        temp = ((u-(m+1.0))^2 + (v-(n+1.0))^2)/(2*a);
        gao(u, v) = 1-1/exp(temp);
    end
end


I = F .* gao;


gp = ifft2(I);


image_out = zeros(m, n, 'uint8');
gp = real(gp);
g = zeros(m, n);
for i = 1 : m
    for j = 1 : n
        g(i, j) = gp(i, j) * (-1)^(i+j);
        
    end
end
mmax = max(g(:));
mmin = min(g(:));
range = mmax-mmin;
for i = 1 : m
    for j = 1 : n
        image_out(i,j) = uint8(255 * (g(i, j)-mmin) / range);
    end
end
i1=0;
j1=0;
for x=1:m
	for y=1:n
	    i1=i1+(abs(I(x,y)))^2;
	    j1=j1+(abs(F(x,y)))^2;
	end
end
    a1=i1/j1;
a1
imshow(image_out), 








三
1.
I=imread('test2.tif');
mask=[0,1,0;1,-4,1;0,1,0];
I1=imfilter(I,mask,'replicate');
figure(1),imshow(I1);







2.
clear;
	img = imread('test4 copy.bmp');
	w1 = fspecial('unsharp',0.2);
	I11 = imfilter(img,w1,'replicate');
	figure(1);
    subplot(2, 2, 1);
imshow(img)
title('原图像test3.pgm');
subplot(2, 2, 2);
imshow(I11)
title('unmask.pgm');





